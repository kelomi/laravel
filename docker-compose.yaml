version: "3.8"

services:
  laravel:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    container_name: laravel_redis_chat_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./laravel:/var/www
    ports:
      - "8000:8000"                  # browse to http://localhost:8000
    environment:
      APP_ENV: local
      APP_DEBUG: 'true'
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: laravel
      DB_PASSWORD: laravel123
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - db
      - redis
    networks:
      - laravel-network

  db:
    image: mysql:8.0
    container_name: laravel_redis_chat_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel123
      MYSQL_ROOT_PASSWORD: laravel123
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - laravel-network

  redis:
    image: redis:7-alpine
    container_name: laravel_redis_chat_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - laravel-network

  nodejs:
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    container_name: laravel_chat_nodejs
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./nodejs:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis
    networks:
      - laravel-network

volumes:
  db_data:
  redis_data:



networks:
  laravel-network:
    driver: bridge
